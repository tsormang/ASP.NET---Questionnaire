@model Questionnaire.Entity.ViewModels.QuestionAnswersVM


@{
    ViewBag.Title = "Edit";
}

<h2>Edit</h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Question</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.Question.QuestionID)

        <div class="form-group">
            @Html.LabelFor(model => model.Question.QuestionValue, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Question.QuestionValue, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Question.QuestionValue, "", new { @class = "text-danger" })
            </div>
        </div>

        @for (int i = 0; i < Model.Question.Answers.Count; i++)
        {
            <div class="form-inline">
                @Html.TextBox("lista", Model.Question.Answers.ElementAt(i).AnswerValue)

                @if (Model.Question.Answers.ElementAt(i).IsCorrect)
                {
                    @Html.RadioButton("correctPossition", i, new { @checked = true })

                }
                else
                {
                    @Html.RadioButton("correctPossition", i)

                }
            </div>
        }

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
